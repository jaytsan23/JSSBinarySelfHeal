********** UPDATES **********
Date 11-24-15

Log Rotation added
    Once logs reach 10MB they will be compressed and placed in /Users/Shared/log_archive
    
Log Clean-up
    Once 5 archived logs are created, the oldest 4 archives will be deleted
    
Added a random delay to the LaunchDaemon
    There is a 10 minute random delay that was added to the LaunchDaemon.  I wanted to move away from the possibility of every client trying to run a policy in the Self Heal at the same time.
    
Modified the if statements to no longer use a like variable.

    example of this change is below:
    Previous:
    if [[ ${check} =~ "The JSS is available" ]]
    
    Now:
    if [[ ${check} == "The JSS is available" ]]
    
I modified my variables to use grep and cut to extract what I would expect to see in terminal running a command using the JAMF binary.  I then was able to use "==" to match my variable to the expected command output.

********** UPDATES **********
Date 11-30-15

Modified launch daemon to run as root

********** UPDATES **********
Date 9-27-2016

I have tested the Self Heal process against JSS 9.96 and still seeing success with the current process. No changes have been made to this workflow at this time.

********** UPDATES **********

Thanks to Sam Novak, I have added a check to view the size of the client binary.  There are reports that client machines when upgrading to 9.96 are receiving a parital/corrupt binary.  A re-enroll fixes this issues, so that has now been added to the Self Heal script as a function check.

********** UPDATES **********
Date 5-24-2017

1) I have added some new changes to the Self Heal process.  I have added an echo of the jamf client binary version.  We will now see the version of the binary in the Self Heal log.
2) I add the -noPolicy flag to the reenroll calls using the invite code.  This should help out with managed devices not trying to run enrollment complete policies when they need to be reenrolled.

Date 5-24-2017

I added date headers and separation between days to make reading the log much easier and cleaner.  There is now a border around the entries to separate by date which includes the date.  Example of the new view is below

**************************************************************************************************************************
                                                  
                                             Todays Date: Wednesday May 24, 2017
                                             Jamf Binary Version: 9.99.0-t1494340586

date: Log entry
date: Log entry
date: Log entry
date: Log entry
date: Log entry

**************************************************************************************************************************

UPDATE 6-14-2017:

Added the following variables: 

networkTimeEnabled="" # on or off
networkTimeServer="" # ex. time.apple.com

Added the following code: 

# Verify Network Time Server And Set It If Needed
currentNetworkTime=$(systemsetup getnetworktimeserver | awk '{print $4}')

if [ "$networkTimeEnabled" = off ]; then
	echo "Network time is currently turned off as expected ..." | addDate >> $logFile;
else
	if [ "$networkTimeServer" != "$currentNetworkTime" ]; then
		echo "Current Network Time Server is $currentNetworkTime" | addDate >> $logFile;
		echo "Setting Network Time Server to $networkTimeServer" | addDate >> $logFile;
		systemsetup setnetworktimeserver $networkTimeServer ... | addDate >> $logFile;
		sleep 2
		currentNetworkTime=$(systemsetup getnetworktimeserver | awk '{print $4}')
		echo "Network Time Server is now set to $currentNetworkTime ..." | addDate >> $logFile;
	else
		echo "Network Time Server is $networkTimeEnabled and set to $currentNetworkTime" | addDate >> $logFile;
	fi
fi

**************************************************************************************************************************

UPDATE 6-30-2017:

Added the following functions:

1) Added a loop to check if the client is currently enrolling into jamf | PRO.  If a jamf enroll process is found, the self heal process will stay in a loop until no enrollment is detected and the Self Heal will continue on

2) Add a verification that checks the client binary and ensures that it's the same version as the jamf | PRO server

Added the following code: 

# Verify Client Is Not Enrolling Before Beginning Self Heal 
while true
psCheck=$(ps aux | grep "[j]amf enroll" | wc -l)
do
    if [ "$psCheck" -gt 0 ]; then
        echo "Client is enrolling, waiting for completion ..." | addDate >> $logFile;
        sleep 5
    else
        echo "Client is not enrolling, continuing Self Heal ..." | addDate >> $logFile;
        break
    fi
done

# Verify Client Binary Matches jamf | PRO Binary
if [ "$bCheck" == "$serverBinary" ]; then
	echo "Client binary matches the current version of jamf | PRO" | addDate >> $logFile;
else
	echo "Client binary does not match the current version of jamf | PRO" | addDate >> $logFile;
	echo "Downloading quickadd package to re-enroll client..." | addDate >> $logFile;
	/usr/bin/curl -sk $jssUrl/quickadd.zip > $quickLocation | addDate >> $logFile;
	/bin/echo "Download is complete ... Unpacking the quickadd package installer to /tmp/" | addDate >> $logFile;
	/usr/bin/unzip /tmp/quickadd.zip -d /tmp/ | addDate >> $logFile;
	/bin/echo "Unzip is complete, now installing the JSS Binary" | addDate >> $logFile;
	/usr/sbin/installer -dumplog -verbose -pkg /tmp/QuickAdd.pkg -target / | addDate >> $logFile;
	/bin/echo "Installation is complete, the client should now be enrolled into the JSS" | addDate >> $logFile;
	/bin/echo "Cleaning up quickadd package ....." | addDate >> $logFile;
	/bin/rm -f /tmp/quickadd.zip | addDate >> $logFile;
	/bin/rm -rf /tmp/QuickAdd.pkg | addDate >> $logFile;
	/bin/rm -rf /tmp/_* | addDate >> $logFile;
fi

10-12-2017

I have confirmed that the Self Heal tool is still compatible with Jamf Pro 10.  
